Practice 9.3
1. UNION <=> FULL OUTER JOIN
2. TO_CHAR(null)
3. UNION ALL
4. SET operators
5. MINUS
6. INTERSECT

Try it/Solve it
1. UNION, UNION ALL, INTERSECT, MINUS
2. SELECT EMPLOYEE_ID, JOB_ID, TO_DATE(NULL) START_DATE,HIRE_DATE, DEPARTMENT_ID
   FROM EMPLOYEES
   UNION
   SELECT EMPLOYEE_ID, JOB_ID, START_DATE,TO_DATE(NULL) HIRE_DATE, DEPARTMENT_ID
   FROM JOB_HISTORY;
3. 1 extra row, 176 SA_REP 24-Mar-1998, 80
   SELECT EMPLOYEE_ID, JOB_ID, TO_DATE(NULL) START_DATE,HIRE_DATE,       DEPARTMENT_ID
   FROM EMPLOYEES
   UNION ALL
   SELECT EMPLOYEE_ID, JOB_ID, START_DATE,TO_DATE(NULL) HIRE_DATE, DEPARTMENT_ID
   FROM JOB_HISTORY
   ORDER BY EMPLOYEE_ID;
4. SELECT DISTINCT e1.employee_id, e1.last_name, e1.first_name
    FROM employees e1
    JOIN job_history e2 ON e1.employee_id = e2.employee_id
    WHERE e1.job_id != e2.job_id;
5. SELECT EMPLOYEE_ID, TO_DATE(NULL) start_date, TO_DATE(NULL) END_DATE, JOB_ID, NVL(SALARY,0)
   FROM EMPLOYEES
   UNION
   SELECT EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, TO_CHAR(NULL) SALARY
   FROM JOB_HISTORY;

